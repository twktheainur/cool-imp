
import Components.ImageCanvas;
import java.awt.GridLayout;
import javax.swing.JTextField;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;

public class CustomFilterView extends javax.swing.JFrame {

    private MainView mainView;
    private ImageCanvas canvas;
    private CustomFilterController controller;
    private JTextField[][] matrixFields;

    /** Creates new form CustomFilterView */
    public CustomFilterView(MainView mv) {
        initComponents();
        mainView = mv;
        canvas = mv.getCurrentTabCanvas();
        generateFields();
        slHoriSize.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                generateFields();
            }
        });
        slVertSize.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                generateFields();
            }
        });
    }

    public ImageCanvas getCanvas() {
        return canvas;
    }

    public MainView getMainView() {
        return mainView;
    }

    public void setController(CustomFilterController controller) {
        this.controller = controller;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bPreview = new javax.swing.JButton();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        slVertSize = new javax.swing.JSlider();
        matrixPanel = new javax.swing.JPanel();
        slHoriSize = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Main.class).getContext().getResourceMap(CustomFilterView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        bPreview.setMnemonic('P');
        bPreview.setText(resourceMap.getString("bPreview.text")); // NOI18N
        bPreview.setName("bPreview"); // NOI18N
        bPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPreviewActionPerformed(evt);
            }
        });

        bOk.setMnemonic('O');
        bOk.setText(resourceMap.getString("bOk.text")); // NOI18N
        bOk.setName("bOk"); // NOI18N
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });

        bCancel.setMnemonic('C');
        bCancel.setText(resourceMap.getString("bCancel.text")); // NOI18N
        bCancel.setName("bCancel"); // NOI18N
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        slVertSize.setMajorTickSpacing(1);
        slVertSize.setMaximum(15);
        slVertSize.setMinimum(1);
        slVertSize.setPaintLabels(true);
        slVertSize.setPaintTicks(true);
        slVertSize.setSnapToTicks(true);
        slVertSize.setToolTipText(resourceMap.getString("slVertSize.toolTipText")); // NOI18N
        slVertSize.setValue(3);
        slVertSize.setName("slVertSize"); // NOI18N

        matrixPanel.setName("matrixPanel"); // NOI18N

        javax.swing.GroupLayout matrixPanelLayout = new javax.swing.GroupLayout(matrixPanel);
        matrixPanel.setLayout(matrixPanelLayout);
        matrixPanelLayout.setHorizontalGroup(
            matrixPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 763, Short.MAX_VALUE)
        );
        matrixPanelLayout.setVerticalGroup(
            matrixPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
        );

        slHoriSize.setMajorTickSpacing(1);
        slHoriSize.setMaximum(15);
        slHoriSize.setMinimum(1);
        slHoriSize.setOrientation(javax.swing.JSlider.VERTICAL);
        slHoriSize.setPaintLabels(true);
        slHoriSize.setPaintTicks(true);
        slHoriSize.setSnapToTicks(true);
        slHoriSize.setToolTipText(resourceMap.getString("slHoriSize.toolTipText")); // NOI18N
        slHoriSize.setValue(3);
        slHoriSize.setName("slHoriSize"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(slVertSize, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                            .addComponent(matrixPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slHoriSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bPreview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCancel)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matrixPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(slHoriSize, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slVertSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bPreview)
                    .addComponent(bOk, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int getMatrixWidth() {
        return slVertSize.getValue();
    }

    public int getMatirxHeight() {
        return slHoriSize.getValue();
    }

    public double[][] getKernel() {
        int w = getMatrixWidth();
        int h = getMatirxHeight();
        System.out.println(w);
        System.out.println(h);
        double[][] kernel = new double[w][h];
        for (int i = 0; i < w; i++) {
            for (int j = 0; j < h; j++) {
                kernel[i][j] = Double.valueOf(matrixFields[i][j].getText());
            }
        }
        return kernel;
    }

    public void generateFields() {
        int w = getMatrixWidth();
        int h = getMatirxHeight();
        matrixPanel.removeAll();
        GridLayout gl = new GridLayout(w, h);
        matrixPanel.setLayout(gl);
        JTextField[][] fields = new JTextField[w][h];
        for (int i = 0; i < w; i++) {
            for (int j = 0; j < h; j++) {
                fields[i][j] = new JTextField("0");
                matrixPanel.add(fields[i][j]);
                fields[i][j].setVisible(true);
                fields[i][j].setHorizontalAlignment(JTextField.CENTER);
            }
        }
        matrixPanel.revalidate();
        matrixPanel.repaint();
        this.matrixFields = null;
        this.matrixFields = fields;
    }

    private void bPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPreviewActionPerformed
        controller.previewCustomFilter();
}//GEN-LAST:event_bPreviewActionPerformed

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        controller.applyCustomFilter();
}//GEN-LAST:event_bOkActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        controller.cancelCustomFilter();
}//GEN-LAST:event_bCancelActionPerformed

    public boolean isGrayscale() {
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOk;
    private javax.swing.JButton bPreview;
    private javax.swing.JPanel matrixPanel;
    private javax.swing.JSlider slHoriSize;
    private javax.swing.JSlider slVertSize;
    // End of variables declaration//GEN-END:variables
}
